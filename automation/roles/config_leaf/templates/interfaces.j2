{% set device = hostvars[inventory_hostname] %}

# Loopback interface
auto lo
iface lo inet loopback
  address {{ device.lo.ipv4 }}/32
  alias loopback interface

# Management interface
auto eth0
iface eth0
  vrf mgmt
  address {{ device.eth0.ipv4 }}
  gateway {{ device.eth0.ipv4_gateway }}

auto mgmt
iface mgmt
    address 127.0.0.1/8
    vrf-table auto

{% set access_ports = [] %}
{% set trunk_ports = [] %}
{% set mlag_ports = [] %}
{% set bond_ports = [] %}



{% for interface in device.interfaces %}
{% set interface_vars = device.interfaces[interface] %}


# Connects to {{ interface_vars.description }}
auto {{ interface }}
iface {{ interface }}
  alias to {{ interface_vars.description }}
  {% if interface_vars.port_type == "access" %}
  {% do access_ports.append(interface) %}
  bridge-access {{ interface_vars.vlan_id }}
  {% endif %}
  {% if interface_vars.port_type == "trunk" %}
  {% do trunk_ports.append(interface) %}
  {% endif %}
  {% if interface_vars.port_type == "mlag" %}
  {% do mlag_ports.append(interface) %}
  post-up ip link set {{ interface }} promisc on
  {% endif %}
  {% if interface_vars.port_type == "bond" %}
  {% do bond_ports.append(interface) %}
  mtu {{ interface_vars.mtu}}
  bond-slaves {{ interface_vars.bond-slaves }}
  bridge-access {{ interface_vars.bridge-access }}
  clag-id {{ interface_vars.clag-id}}
  {% endif %}

{% endfor %}

# CLAG Peerlink bond
auto peerlink
iface peerlink
  mtu 9000
  bond-slaves swp47 swp48



# CLAG Peerlink L2 interface.
# This creates VLAN 4094 that only lives on the peerlink bond
# No other interface will be aware of VLAN 4094
auto peerlink.4094
iface peerlink.4094
  address {{ device.clag.clag_address }}
  clagd-peer-ip {{ device.clag.clagd-peer-ip }}
  clagd-backup-ip {{ device.clag.clagd-backup-ip }}
  clagd-sys-mac {{ device.clag.clagd-sys-mac }}
  clagd-priority {{ device.clag.clagd-priority }}








# Bridge configuration
auto bridge
iface bridge
    bridge-vlan-aware yes
    bridge-ports {{access_ports|sort|join(' ')}} {{trunk_ports|sort|join(' ')}} {{ device.bridge.bridge_ports|sort|join(' ') }}
    bridge-vids {{ device.bridge.bridge_vids|sort|join(' ') }}
    bridge-pvid 1

{% for vxlan_interface in device.vxlan.interfaces %}
{% set vxlan_interface_vars = device.vxlan.interfaces[vxlan_interface] %}

# VNI configuration
auto {{ vxlan_interface }}
iface {{ vxlan_interface }}
    mtu 9166
    vxlan-id {{ vxlan_interface_vars.vxlan_id }}
    vxlan-local-tunnelip {{ device.lo.ipv4 }}
    bridge-access {{ vxlan_interface_vars.vlan_id }}
    bridge-learning off
{% if vxlan_interface_vars.vni_type == "l2" %}
    mstpctl-bpduguard yes
    mstpctl-portbpdufilter yes
{% endif %}
    bridge-arp-nd-suppress on
{% endfor %}

{% for vrf in device.vrf.list %}
auto {{ vrf }}
iface {{ vrf }}
    vrf-table auto

{% endfor %}

{% for svi in device.svi.interfaces %}
{% set svi_vars = device.svi.interfaces[svi] %}

auto {{ svi }}
iface {{ svi }}
{% if svi_vars.ip_addresses is defined %}
{% for ip_addresses in svi_vars.ip_addresses %}
    address {{ ip_addresses }}
{% endfor %}
{% endif %}
    vlan-id {{ svi_vars.vlan_id }}
    vlan-raw-device bridge
    vrf {{ svi_vars.vrf }}
{% endfor %}
